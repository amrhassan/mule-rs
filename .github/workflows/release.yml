name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.*'
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  release_assets:
    name: Release assets
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: x86_64-apple-darwin
            BIN_SIFFIX: 
            NAME: ${{ github.event.repository.name }}
            EXTRA_STEP: 
          - os: ubuntu-latest
            TARGET: x86_64-unknown-linux-musl
            BIN_SIFFIX: 
            NAME: ${{ github.event.repository.name }}
            EXTRA_STEP: sudo apt install musl-tools        # https://github.com/actions-rs/toolchain/issues/102
          - os: ubuntu-latest
            TARGET: x86_64-unknown-linux-gnu
            BIN_SIFFIX: 
            NAME: ${{ github.event.repository.name }}
            EXTRA_STEP: 
          - os: windows-latest
            TARGET: x86_64-pc-windows-msvc
            BIN_SIFFIX: .dll
            NAME: ${{ github.event.repository.name }}
            EXTRA_STEP: 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@3.1.0
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.TARGET }}
      - name: Run extra build set steps
        if: ${{ matrix.EXTRA_STEP }}
        run: ${{ matrix.EXTRA_STEP }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{matrix.TARGET}}
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: ${{ matrix.NAME }}-${{ env.GITHUB_REF_SLUG }}-${{ matrix.TARGET }}${{ matrix.BIN_SUFFIX }}
          asset_path: ./target/${{ matrix.TARGET }}/release/${{ matrix.NAME }}${{ matrix.BIN_SUFFIX }}
          asset_content_type: application/octet-stream

